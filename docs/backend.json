
{
  "entities": {
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product in the e-commerce store.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the product."
        },
        "price": {
          "type": "number",
          "description": "Price of the product."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the product's image.",
          "format": "uri"
        },
        "category": {
          "type": "string",
          "description": "Category the product belongs to."
        },
        "sizes": {
          "type": "array",
          "description": "Available sizes for the product.",
          "items": {
            "type": "string"
          }
        },
        "colors": {
          "type": "array",
          "description": "Available colors for the product.",
          "items": {
            "type": "string"
          }
        },
        "averageRating": {
          "type": "number",
          "description": "Average rating of the product based on customer reviews."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "price",
        "imageUrl",
        "category"
      ]
    },
    "Consumer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Consumer",
      "type": "object",
      "description": "Represents a user account in the consumers collection.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the consumer, matches Firebase Auth UID."
        },
        "firstname": {
          "type": "string",
          "description": "First name of the consumer."
        },
        "lastname": {
          "type": "string",
          "description": "Last name of the consumer."
        },
        "email": {
          "type": "string",
          "description": "Email address of the consumer.",
          "format": "email"
        },
        "shippingAddresses": {
          "type": "array",
          "description": "Shipping addresses associated with the user.",
          "items": {
            "type": "string"
          }
        },
        "orderIds": {
          "type": "array",
          "description": "References to Order. (Relationship: User 1:N Order)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "firstname",
        "lastname",
        "email"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents a customer order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "Date the order was placed.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "Total amount of the order."
        },
        "shippingAddress": {
          "type": "string",
          "description": "Shipping address for the order."
        },
        "orderItemIds": {
          "type": "array",
          "description": "References to OrderItem. (Relationship: Order 1:N OrderItem)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "userId",
        "orderDate",
        "totalAmount",
        "shippingAddress"
      ]
    },
    "OrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OrderItem",
      "type": "object",
      "description": "Represents an item within an order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order item."
        },
        "orderId": {
          "type": "string",
          "description": "Reference to Order. (Relationship: Order 1:N OrderItem)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N OrderItem)"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the product in the order item."
        },
        "price": {
          "type": "number",
          "description": "Price of the product at the time of the order."
        }
      },
      "required": [
        "id",
        "orderId",
        "productId",
        "quantity",
        "price"
      ]
    },
    "Review": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Review",
      "type": "object",
      "description": "Represents a customer review for a product.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the review."
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N Review)"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Review)"
        },
        "rating": {
          "type": "number",
          "description": "Rating given by the user (e.g., 1 to 5)."
        },
        "comment": {
          "type": "string",
          "description": "Text comment provided by the user."
        },
        "reviewDate": {
          "type": "string",
          "description": "Date the review was submitted.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "productId",
        "userId",
        "rating",
        "comment",
        "reviewDate"
      ]
    },
    "Subscriber": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subscriber",
      "type": "object",
      "description": "Represents a subscriber to the newsletter or a pre-launch notification list.",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address of the subscriber.",
          "format": "email"
        },
        "subscribedAt": {
          "type": "string",
          "description": "Date and time the subscriber signed up.",
          "format": "date-time"
        },
        "source": {
          "type": "string",
          "description": "Source of the subscription (e.g., 'footer', 'coming-soon')."
        }
      },
      "required": [
        "email",
        "subscribedAt",
        "source"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": {
            "$ref": "#/backend/entities/Product"
          },
          "description": "Stores product information.  'productId' is the unique identifier for each product.",
          "params": [
            {
              "name": "productId",
              "description": "Unique identifier for the product."
            }
          ]
        }
      },
      {
        "path": "/consumers/{consumerId}",
        "definition": {
          "entityName": "Consumer",
          "schema": {
            "$ref": "#/backend/entities/Consumer"
          },
          "description": "Stores consumer account information. 'consumerId' is the unique identifier for each consumer, matching their Firebase Auth UID.",
          "params": [
            {
              "name": "consumerId",
              "description": "Unique identifier for the consumer."
            }
          ]
        }
      },
      {
        "path": "/consumers/{consumerId}/orders/{orderId}",
        "definition": {
          "entityName": "Order",
          "schema": {
            "$ref": "#/backend/entities/Order"
          },
          "description": "Stores order information for each consumer. 'consumerId' is the consumer's ID, and 'orderId' is the unique identifier for each order.",
          "params": [
            {
              "name": "consumerId",
              "description": "Unique identifier for the consumer."
            },
            {
              "name": "orderId",
              "description": "Unique identifier for the order."
            }
          ]
        }
      },
      {
        "path": "/orders_items/{orderItemId}",
        "definition": {
          "entityName": "OrderItem",
          "schema": {
            "$ref": "#/backend/entities/OrderItem"
          },
          "description": "Stores order item information, separate from orders. 'orderItemId' is the unique identifier for each order item.",
          "params": [
            {
              "name": "orderItemId",
              "description": "Unique identifier for the order item."
            }
          ]
        }
      },
      {
        "path": "/products/{productId}/reviews/{reviewId}",
        "definition": {
          "entityName": "Review",
          "schema": {
            "$ref": "#/backend/entities/Review"
          },
          "description": "Stores product reviews. 'productId' is the product ID, and 'reviewId' is the unique identifier for each review.",
          "params": [
            {
              "name": "productId",
              "description": "Unique identifier for the product."
            },
            {
              "name": "reviewId",
              "description": "Unique identifier for the review."
            }
          ]
        }
      },
      {
        "path": "/subscribers/{subscriberId}",
        "definition": {
          "entityName": "Subscriber",
          "schema": {
            "$ref": "#/backend/entities/Subscriber"
          },
          "description": "Stores general newsletter subscriber information, typically from the site footer.",
          "params": [
            {
              "name": "subscriberId",
              "description": "Unique identifier for the subscriber."
            }
          ]
        }
      },
      {
        "path": "/notify-me/{notificationId}",
        "definition": {
          "entityName": "Subscriber",
          "schema": {
            "$ref": "#/backend/entities/Subscriber"
          },
          "description": "Stores emails from the 'Coming Soon' page for launch notifications.",
          "params": [
            {
              "name": "notificationId",
              "description": "Unique identifier for the notification signup."
            }
          ]
        }
      }
    ],
    "reasoning": "The structure prioritizes security and scalability for the Aptly Dressed eBoutique. The core design focuses on authorization independence to ensure robust security rules and atomic operations.  The error reported indicates that unauthenticated users are attempting to create subscriber documents. The design ensures that all subscriber data is stored under the `/subscribers` collection and that only authenticated users with a specific role (e.g., admin) or via a callable function with rate-limiting, can create documents. The `/subscribers` collection stores the email, subscription timestamp, and source. This structure allows for easy querying and management of subscribers.  The structure is designed to support QAPs by segregating the subscriber data into a single collection with uniform security requirements. This prevents the need for complex filtering in rules.  The design includes paths for products, user data (including orders and reviews), to logically separate concerns and ensure scalability as the platform grows."
  }
}

    